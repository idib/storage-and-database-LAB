/*
 * This file is generated by jOOQ.
 */
package com.sadb.generated.source.oracle.tables.records;


import com.sadb.generated.source.oracle.tables.AcademicYear;

import java.math.BigInteger;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AcademicYearRecord extends UpdatableRecordImpl<AcademicYearRecord> implements Record4<String, BigInteger, Date, Date> {

    private static final long serialVersionUID = -1184772962;

    /**
     * Setter for <code>USER1.ACADEMIC_YEAR.ACADEM_YEAR</code>.
     */
    public void setAcademYear(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>USER1.ACADEMIC_YEAR.ACADEM_YEAR</code>.
     */
    public String getAcademYear() {
        return (String) get(0);
    }

    /**
     * Setter for <code>USER1.ACADEMIC_YEAR.ACADEM_YEAR_ID</code>.
     */
    public void setAcademYearId(BigInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>USER1.ACADEMIC_YEAR.ACADEM_YEAR_ID</code>.
     */
    public BigInteger getAcademYearId() {
        return (BigInteger) get(1);
    }

    /**
     * Setter for <code>USER1.ACADEMIC_YEAR.CREAT_TIME</code>.
     */
    public void setCreatTime(Date value) {
        set(2, value);
    }

    /**
     * Getter for <code>USER1.ACADEMIC_YEAR.CREAT_TIME</code>.
     */
    public Date getCreatTime() {
        return (Date) get(2);
    }

    /**
     * Setter for <code>USER1.ACADEMIC_YEAR.UPDATE_TIME</code>.
     */
    public void setUpdateTime(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>USER1.ACADEMIC_YEAR.UPDATE_TIME</code>.
     */
    public Date getUpdateTime() {
        return (Date) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<BigInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, BigInteger, Date, Date> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, BigInteger, Date, Date> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return AcademicYear.ACADEMIC_YEAR.ACADEM_YEAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigInteger> field2() {
        return AcademicYear.ACADEMIC_YEAR.ACADEM_YEAR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field3() {
        return AcademicYear.ACADEMIC_YEAR.CREAT_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return AcademicYear.ACADEMIC_YEAR.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getAcademYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger component2() {
        return getAcademYearId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component3() {
        return getCreatTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component4() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getAcademYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger value2() {
        return getAcademYearId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value3() {
        return getCreatTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AcademicYearRecord value1(String value) {
        setAcademYear(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AcademicYearRecord value2(BigInteger value) {
        setAcademYearId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AcademicYearRecord value3(Date value) {
        setCreatTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AcademicYearRecord value4(Date value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AcademicYearRecord values(String value1, BigInteger value2, Date value3, Date value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AcademicYearRecord
     */
    public AcademicYearRecord() {
        super(AcademicYear.ACADEMIC_YEAR);
    }

    /**
     * Create a detached, initialised AcademicYearRecord
     */
    public AcademicYearRecord(String academYear, BigInteger academYearId, Date creatTime, Date updateTime) {
        super(AcademicYear.ACADEMIC_YEAR);

        set(0, academYear);
        set(1, academYearId);
        set(2, creatTime);
        set(3, updateTime);
    }
}
