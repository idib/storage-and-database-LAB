/*
 * This file is generated by jOOQ.
 */
package com.sadb.generated.source.postgres.tables;


import com.sadb.generated.source.postgres.Indexes;
import com.sadb.generated.source.postgres.Keys;
import com.sadb.generated.source.postgres.Public;
import com.sadb.generated.source.postgres.tables.records.SrcPgsResultsRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SrcPgsResults extends TableImpl<SrcPgsResultsRecord> {

    private static final long serialVersionUID = 1562472947;

    /**
     * The reference instance of <code>public.src_pgs_results</code>
     */
    public static final SrcPgsResults SRC_PGS_RESULTS = new SrcPgsResults();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SrcPgsResultsRecord> getRecordType() {
        return SrcPgsResultsRecord.class;
    }

    /**
     * The column <code>public.src_pgs_results.result_id</code>.
     */
    public final TableField<SrcPgsResultsRecord, BigDecimal> RESULT_ID = createField("result_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.src_pgs_results.student_id</code>.
     */
    public final TableField<SrcPgsResultsRecord, BigDecimal> STUDENT_ID = createField("student_id", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.src_pgs_results.discipline_id</code>.
     */
    public final TableField<SrcPgsResultsRecord, BigDecimal> DISCIPLINE_ID = createField("discipline_id", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.src_pgs_results.control_form</code>.
     */
    public final TableField<SrcPgsResultsRecord, String> CONTROL_FORM = createField("control_form", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.src_pgs_results.result</code>.
     */
    public final TableField<SrcPgsResultsRecord, Double> RESULT = createField("result", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.src_pgs_results.result_date</code>.
     */
    public final TableField<SrcPgsResultsRecord, Date> RESULT_DATE = createField("result_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>public.src_pgs_results.teacher_id</code>.
     */
    public final TableField<SrcPgsResultsRecord, BigDecimal> TEACHER_ID = createField("teacher_id", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.src_pgs_results.created_at</code>.
     */
    public final TableField<SrcPgsResultsRecord, OffsetDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * The column <code>public.src_pgs_results.updated_at</code>.
     */
    public final TableField<SrcPgsResultsRecord, OffsetDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * Create a <code>public.src_pgs_results</code> table reference
     */
    public SrcPgsResults() {
        this(DSL.name("src_pgs_results"), null);
    }

    /**
     * Create an aliased <code>public.src_pgs_results</code> table reference
     */
    public SrcPgsResults(String alias) {
        this(DSL.name(alias), SRC_PGS_RESULTS);
    }

    /**
     * Create an aliased <code>public.src_pgs_results</code> table reference
     */
    public SrcPgsResults(Name alias) {
        this(alias, SRC_PGS_RESULTS);
    }

    private SrcPgsResults(Name alias, Table<SrcPgsResultsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SrcPgsResults(Name alias, Table<SrcPgsResultsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SrcPgsResults(Table<O> child, ForeignKey<O, SrcPgsResultsRecord> key) {
        super(child, key, SRC_PGS_RESULTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SRC_PGS_RESULTS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SrcPgsResultsRecord> getPrimaryKey() {
        return Keys.SRC_PGS_RESULTS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SrcPgsResultsRecord>> getKeys() {
        return Arrays.<UniqueKey<SrcPgsResultsRecord>>asList(Keys.SRC_PGS_RESULTS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SrcPgsResultsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SrcPgsResultsRecord, ?>>asList(Keys.SRC_PGS_RESULTS__SRC_PGS_RESULTS_STUDENT_ID_FKEY, Keys.SRC_PGS_RESULTS__SRC_PGS_RESULTS_DISCIPLINE_ID_FKEY, Keys.SRC_PGS_RESULTS__SRC_PGS_RESULTS_TEACHER_ID_FKEY);
    }

    public SrcPgsSudent srcPgsSudent() {
        return new SrcPgsSudent(this, Keys.SRC_PGS_RESULTS__SRC_PGS_RESULTS_STUDENT_ID_FKEY);
    }

    public SrcPgsDiscipline srcPgsDiscipline() {
        return new SrcPgsDiscipline(this, Keys.SRC_PGS_RESULTS__SRC_PGS_RESULTS_DISCIPLINE_ID_FKEY);
    }

    public SrcPgsTeacher srcPgsTeacher() {
        return new SrcPgsTeacher(this, Keys.SRC_PGS_RESULTS__SRC_PGS_RESULTS_TEACHER_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SrcPgsResults as(String alias) {
        return new SrcPgsResults(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SrcPgsResults as(Name alias) {
        return new SrcPgsResults(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SrcPgsResults rename(String name) {
        return new SrcPgsResults(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SrcPgsResults rename(Name name) {
        return new SrcPgsResults(name, null);
    }
}
