/*
 * This file is generated by jOOQ.
 */
package com.sadb.generated.source.mysql;


import com.sadb.generated.source.mysql.tables.ListParticipant;
import com.sadb.generated.source.mysql.tables.ListParticipantProject;
import com.sadb.generated.source.mysql.tables.Participant;
import com.sadb.generated.source.mysql.tables.Publications;
import com.sadb.generated.source.mysql.tables.ReaderSheet;
import com.sadb.generated.source.mysql.tables.ScientificProject;
import com.sadb.generated.source.mysql.tables.TypeEdition;
import com.sadb.generated.source.mysql.tables.TypePosition;
import com.sadb.generated.source.mysql.tables.TypePublication;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Conference extends SchemaImpl {

    private static final long serialVersionUID = 1652466721;

    /**
     * The reference instance of <code>conference</code>
     */
    public static final Conference CONFERENCE = new Conference();

    /**
     * The table <code>conference.Conference</code>.
     */
    public final com.sadb.generated.source.mysql.tables.Conference CONFERENCE_ = com.sadb.generated.source.mysql.tables.Conference.CONFERENCE_;

    /**
     * The table <code>conference.List_participant</code>.
     */
    public final ListParticipant LIST_PARTICIPANT = com.sadb.generated.source.mysql.tables.ListParticipant.LIST_PARTICIPANT;

    /**
     * The table <code>conference.List_participant_project</code>.
     */
    public final ListParticipantProject LIST_PARTICIPANT_PROJECT = com.sadb.generated.source.mysql.tables.ListParticipantProject.LIST_PARTICIPANT_PROJECT;

    /**
     * The table <code>conference.Participant</code>.
     */
    public final Participant PARTICIPANT = com.sadb.generated.source.mysql.tables.Participant.PARTICIPANT;

    /**
     * The table <code>conference.Publications</code>.
     */
    public final Publications PUBLICATIONS = com.sadb.generated.source.mysql.tables.Publications.PUBLICATIONS;

    /**
     * The table <code>conference.Reader_sheet</code>.
     */
    public final ReaderSheet READER_SHEET = com.sadb.generated.source.mysql.tables.ReaderSheet.READER_SHEET;

    /**
     * The table <code>conference.Scientific_project</code>.
     */
    public final ScientificProject SCIENTIFIC_PROJECT = com.sadb.generated.source.mysql.tables.ScientificProject.SCIENTIFIC_PROJECT;

    /**
     * The table <code>conference.Type_edition</code>.
     */
    public final TypeEdition TYPE_EDITION = com.sadb.generated.source.mysql.tables.TypeEdition.TYPE_EDITION;

    /**
     * The table <code>conference.Type_position</code>.
     */
    public final TypePosition TYPE_POSITION = com.sadb.generated.source.mysql.tables.TypePosition.TYPE_POSITION;

    /**
     * The table <code>conference.Type_publication</code>.
     */
    public final TypePublication TYPE_PUBLICATION = com.sadb.generated.source.mysql.tables.TypePublication.TYPE_PUBLICATION;

    /**
     * No further instances allowed
     */
    private Conference() {
        super("conference", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            com.sadb.generated.source.mysql.tables.Conference.CONFERENCE_,
            ListParticipant.LIST_PARTICIPANT,
            ListParticipantProject.LIST_PARTICIPANT_PROJECT,
            Participant.PARTICIPANT,
            Publications.PUBLICATIONS,
            ReaderSheet.READER_SHEET,
            ScientificProject.SCIENTIFIC_PROJECT,
            TypeEdition.TYPE_EDITION,
            TypePosition.TYPE_POSITION,
            TypePublication.TYPE_PUBLICATION);
    }
}
