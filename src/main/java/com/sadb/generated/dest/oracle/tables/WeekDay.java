/*
 * This file is generated by jOOQ.
 */
package com.sadb.generated.dest.oracle.tables;


import com.sadb.generated.dest.oracle.Indexes;
import com.sadb.generated.dest.oracle.Keys;
import com.sadb.generated.dest.oracle.Sanddb;
import com.sadb.generated.dest.oracle.tables.records.WeekDayRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WeekDay extends TableImpl<WeekDayRecord> {

    private static final long serialVersionUID = 596211125;

    /**
     * The reference instance of <code>SANDDB.WEEK_DAY</code>
     */
    public static final WeekDay WEEK_DAY = new WeekDay();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WeekDayRecord> getRecordType() {
        return WeekDayRecord.class;
    }

    /**
     * The column <code>SANDDB.WEEK_DAY.WEEK_DAY_ID</code>.
     */
    public final TableField<WeekDayRecord, Long> WEEK_DAY_ID = createField("WEEK_DAY_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>SANDDB.WEEK_DAY.DAY</code>.
     */
    public final TableField<WeekDayRecord, String> DAY = createField("DAY", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>SANDDB.WEEK_DAY.CREAT_TIME</code>.
     */
    public final TableField<WeekDayRecord, Timestamp> CREAT_TIME = createField("CREAT_TIME", org.jooq.impl.SQLDataType.TIMESTAMP.precision(38), this, "");

    /**
     * The column <code>SANDDB.WEEK_DAY.UPDATE_TIME</code>.
     */
    public final TableField<WeekDayRecord, Timestamp> UPDATE_TIME = createField("UPDATE_TIME", org.jooq.impl.SQLDataType.TIMESTAMP.precision(38), this, "");

    /**
     * Create a <code>SANDDB.WEEK_DAY</code> table reference
     */
    public WeekDay() {
        this(DSL.name("WEEK_DAY"), null);
    }

    /**
     * Create an aliased <code>SANDDB.WEEK_DAY</code> table reference
     */
    public WeekDay(String alias) {
        this(DSL.name(alias), WEEK_DAY);
    }

    /**
     * Create an aliased <code>SANDDB.WEEK_DAY</code> table reference
     */
    public WeekDay(Name alias) {
        this(alias, WEEK_DAY);
    }

    private WeekDay(Name alias, Table<WeekDayRecord> aliased) {
        this(alias, aliased, null);
    }

    private WeekDay(Name alias, Table<WeekDayRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> WeekDay(Table<O> child, ForeignKey<O, WeekDayRecord> key) {
        super(child, key, WEEK_DAY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sanddb.SANDDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.XPK_WEEK_DAY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WeekDayRecord> getPrimaryKey() {
        return Keys.XPK_WEEK_DAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WeekDayRecord>> getKeys() {
        return Arrays.<UniqueKey<WeekDayRecord>>asList(Keys.XPK_WEEK_DAY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WeekDay as(String alias) {
        return new WeekDay(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WeekDay as(Name alias) {
        return new WeekDay(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WeekDay rename(String name) {
        return new WeekDay(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WeekDay rename(Name name) {
        return new WeekDay(name, null);
    }
}
