/*
 * This file is generated by jOOQ.
 */
package com.sadb.generated.dest.oracle.tables;


import com.sadb.generated.dest.oracle.Indexes;
import com.sadb.generated.dest.oracle.Keys;
import com.sadb.generated.dest.oracle.Sanddb;
import com.sadb.generated.dest.oracle.tables.records.ClassRoomRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClassRoom extends TableImpl<ClassRoomRecord> {

    private static final long serialVersionUID = -816418647;

    /**
     * The reference instance of <code>SANDDB.CLASS_ROOM</code>
     */
    public static final ClassRoom CLASS_ROOM = new ClassRoom();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClassRoomRecord> getRecordType() {
        return ClassRoomRecord.class;
    }

    /**
     * The column <code>SANDDB.CLASS_ROOM.CLASS_ID</code>.
     */
    public final TableField<ClassRoomRecord, Long> CLASS_ID = createField("CLASS_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>SANDDB.CLASS_ROOM.CLASS_NUMBER</code>.
     */
    public final TableField<ClassRoomRecord, Long> CLASS_NUMBER = createField("CLASS_NUMBER", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>SANDDB.CLASS_ROOM.CREAT_TIME</code>.
     */
    public final TableField<ClassRoomRecord, Timestamp> CREAT_TIME = createField("CREAT_TIME", org.jooq.impl.SQLDataType.TIMESTAMP.precision(38), this, "");

    /**
     * The column <code>SANDDB.CLASS_ROOM.UPDATE_TIME</code>.
     */
    public final TableField<ClassRoomRecord, Timestamp> UPDATE_TIME = createField("UPDATE_TIME", org.jooq.impl.SQLDataType.TIMESTAMP.precision(38), this, "");

    /**
     * Create a <code>SANDDB.CLASS_ROOM</code> table reference
     */
    public ClassRoom() {
        this(DSL.name("CLASS_ROOM"), null);
    }

    /**
     * Create an aliased <code>SANDDB.CLASS_ROOM</code> table reference
     */
    public ClassRoom(String alias) {
        this(DSL.name(alias), CLASS_ROOM);
    }

    /**
     * Create an aliased <code>SANDDB.CLASS_ROOM</code> table reference
     */
    public ClassRoom(Name alias) {
        this(alias, CLASS_ROOM);
    }

    private ClassRoom(Name alias, Table<ClassRoomRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClassRoom(Name alias, Table<ClassRoomRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ClassRoom(Table<O> child, ForeignKey<O, ClassRoomRecord> key) {
        super(child, key, CLASS_ROOM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sanddb.SANDDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.XPK_CLASS_ROOM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClassRoomRecord> getPrimaryKey() {
        return Keys.XPK_CLASS_ROOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClassRoomRecord>> getKeys() {
        return Arrays.<UniqueKey<ClassRoomRecord>>asList(Keys.XPK_CLASS_ROOM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClassRoom as(String alias) {
        return new ClassRoom(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClassRoom as(Name alias) {
        return new ClassRoom(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClassRoom rename(String name) {
        return new ClassRoom(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClassRoom rename(Name name) {
        return new ClassRoom(name, null);
    }
}
